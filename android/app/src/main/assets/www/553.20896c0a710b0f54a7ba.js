"use strict";(self.webpackChunksosgame=self.webpackChunksosgame||[]).push([[553],{657:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(379);function i(e,t=0){const n=[];for(const[t]of Object.entries(e))n.push(t);let i=n.length;const o=t=>{const i=n[t];(0,r.vA)(i,"Bad Index");const o=e[i];return(0,r.vA)(o,"Empty client"),o},s=t=>{const n=e[t];return(0,r.vA)(n,`No id ${t} in clients`),n},d=(e,t)=>{const r=e.index,i=n[r];n[e.index]=n[t.index],e.index=t.index,n[t.index]=i,t.index=r},l=e=>(e+n.length)%n.length;return{addClient:(t,o)=>{const s=e[t];s?s.name=o:(e[t]={index:i,name:o},n.push(t),++i),(0,r.vA)(i===n.length)},remove:t=>{const o=e[t];--i;const s=n[i];n[o.index]=s,n.pop();e[s].index=o.index,e[t]=null,(0,r.vA)(i===n.length)},swapInd:(e,t)=>{const n=o(e),r=o(t);d(n,r)},swapById:(e,t)=>{const n=s(e),r=s(t);d(n,r)},indById:e=>l(s(e).index+t),idByInd:e=>n[l(e-t)],size:()=>n.length}}},553:(e,t,n)=>{n.r(t),n.d(t,{default:()=>I});var r=n(373),i=n(379),o=n(189);function s(e,t=0,n=void 0){let r=o.A.IMPOSSIBLE_MOVE,i={res:r,digit:-1,position:-1};const s=n||e.size();for(let n=Math.max(t,0);n<Math.min(s,e.size());++n)for(let t=0;t<2;++t){const s=e.setSafeByIndex(t,n,!0);if(s===o.A.IMPOSSIBLE_MOVE)break;if(s===o.A.WINNING_MOVE)return{res:s,digit:t,position:n};r<s&&(r=s,i={res:r,digit:t,position:n})}return i}function d(e){let t={res:o.A.IMPOSSIBLE_MOVE,digit:-1,position:-1};for(let n=0;n<e.size();++n)for(let r=0;r<2;++r){const i=e.clone(),d=i.setSafeByIndex(r,n);if(d===o.A.IMPOSSIBLE_MOVE)break;if(s(i,n-2,n+3).res!==o.A.WINNING_MOVE)return{res:d,digit:r,position:n};t={res:d,digit:r,position:n}}return t}function l(e){const t=s(e);return t.res===o.A.WINNING_MOVE?t:d(e)}const c={bestMove:s,notLoosingMove:d,simpleMove:l,simpleMoveArr:function(e){return l(o.A.field(e))}};var a=n(657);function u(e,t){const n=e.getCurrentIndex();if(n===e.getClientIndex())return;const r=e.toJson(n);(0,i.vA)(r.currentUserIdx===n,"Corrupt data");const o=c.simpleMoveArr(r.fieldArr);return o.playerId=n,t.onMessage(o)}function I(e,t,n,o){return new Promise((s=>{const d=r.A.presenterFuncDefault(n),l=o(e,t,n,d),c=d.getClientIndex(),I=(0,a.A)({},c);I.addClient("user","user");for(let e=1;e<d.getPlayersSize();++e){const t="bot"+e;I.addClient(t,t)}l.on("gameover",(()=>{t.querySelector(".butInstall").classList.remove("hidden2")})),l.on("message",(async e=>{e.playerId===c&&(await(0,i.cb)(100),await u(d,l))})),l.on("winclosed",(()=>{d.nextRound(),l.redraw(),u(d,l)})),u(d,l),s(l)}))}},373:(e,t,n)=>{n.d(t,{A:()=>l});var r=n(189),i=n(746);function o(e,t,n,r,i){let o=n,s="";return i>=0&&i<r.length&&(s=r[i]),{isLastMove:e,isActive:t,text:o,color:s}}function s(e){return{clientUserIdx:e.colorOrder.indexOf(e.color),currentUserIdx:0,playersSize:e.playerLimit,activeCellIndex:-1,activeDigitIndex:-1,lastMove:-1,gameover:!0,gamestarted:!1,round:0,fieldArr:r.A.init(e.size),movesIdx:Array(e.size).fill(-1)}}function d({currentUserIdx:e,clientUserIdx:t,playersSize:n,activeCellIndex:s,activeDigitIndex:d,lastMove:l,gameover:c,gamestarted:a,round:u,fieldArr:I,movesIdx:f},v){let A=r.A.field(I);const g=(0,i.A)(["firstmove","gameover"]);const x=()=>{e=(e+1)%n},M=function(n,i,o){if(!((e,t,n,r)=>!(t<0||t>=2)&&n==r&&A.canSet(e))(n,i,o,e))return{res:r.A.IMPOSSIBLE_MOVE,position:-1,digit:-1,playerId:e,clientId:o};const u=A.setSafeByIndex(i,n);if(u===r.A.IMPOSSIBLE_MOVE)return{res:u,position:-1,digit:-1,playerId:e,clientId:o};s=-1,d=-1,a||g.call("firstmove",{}),a=!0,f[n]=o,l=n;const I=e,v=t;return u===r.A.NORMAL_MOVE&&x(),u!==r.A.WINNING_MOVE&&u!==r.A.DRAW_MOVE||(c=!0,g.call("gameover",u)),{res:u,position:n,digit:i,playerId:I,clientId:v}},p=A.size,m=()=>v.colorOrder[e],O=()=>{a=!1,c=!1,s=-1,d=-1,l=-1,I=r.A.init(p()),f=Array(p()).fill(-1),e=u%n,A=r.A.field(I)};return{on:function(e,t){return g.on(e,t)},size:p,tryMove:function(){return M(s,d,e)},setMove:M,enum1:()=>function*(){for(let e=0;e<A.size();++e)yield[e,o(l===e,s===e,A.getCharSafe(e),v.colorOrder,f[e])]}(),setActivePosition:function(n){t!==e||c||(s=A.canSet(n)?n:-1)},setActiveDigitIndex:function(n){t!==e||c||(d=n)},currentColor:m,getActiveDigitIndex:()=>d,endMessage:n=>n===r.A.DRAW_MOVE?"Draw":e!==t?"You lose":"You win",endMessage2:e=>e===r.A.DRAW_MOVE?"Draw":m()+" player win",toJson:t=>({currentUserIdx:e,clientUserIdx:t,playersSize:n,activeCellIndex:s,activeDigitIndex:d,lastMove:l,gameover:c,fieldArr:A.toArr(),movesIdx:f}),isGameOver:()=>c,isMyMove:()=>!c&&e===t,calcLastMoveRes:()=>{if(l<0)return r.A.IMPOSSIBLE_MOVE;return A.checkWinning(l)},getCurrentIndex:()=>e,setClientIndex:e=>{t=e},getClientIndex:()=>t,getPlayersSize:()=>n,setMyTurn:()=>{e=t},nextRound:()=>{++u,O()},resetRound:O}}const l={presenterFunc:d,defaultPresenter:s,presenterFuncDefault:function(e){return d(s(e),e)}}}}]);